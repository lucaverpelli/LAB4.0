# -*- coding: utf-8 -*-
"""
Created on Fri Apr 22 14:45:47 2022

@author: Angela
"""
#RUN FIRSTLY THIS PART JUST ONCE AND THEN THE SECOND ONE EVERY TIME YOU WANT TO GATHER THE DATA CHANGING THE NAME OF THE EXCEL FILE, ONLY WHEN YOU FINISH RUN THE CLOSE COMMAND
 
#Connection to Kafka and download of the data

from ctypes import CDLL
CDLL(r'C:\Users\Angela\anaconda3\Lib\site-packages\confluent_kafka.libs\librdkafka-5d2e2910.dll')
from confluent_kafka import Consumer
import pandas as pd
from time import sleep
import json

consumer_conf = dict()
consumer_conf['bootstrap.servers'] = '10.48.134.234:9092'
consumer_conf['group.id'] = 'Nuc'
consumer_conf['auto.offset.reset'] = 'earliest'
kafka_consumer = Consumer(consumer_conf)
kafka_consumer.subscribe(['opc2k_topic'])

messages=list()
for i in range(0,480):
    messs= kafka_consumer.poll(timeout=1.0)
    messages.append(messs)
    sleep(1)
# if sample_message is None:
#     print('No message received form consumer')
# elif not sample_message.error():
#     print('Message received:')
for j in range(len(messages)):
    print(messages[j].value())

###2ND PART
a=messages[0].value()
#just to initialize, after will be overwritten
user_dict=json.loads(a.decode('utf-8'))
mess=pd.DataFrame.from_dict({(i,j): user_dict[i][j] 
                        for i in user_dict.keys() 
                        for j in user_dict[i].keys()},
                    orient='index')


#to do this for every j-th element in messages
for j in range(len(messages)):
    a=messages[j].value()             #--TO BE DELETED
    #a=messages[j].value()     --TO UNCOMMENT
    #the output of the code below will be a dataframe with each column related to a single instant of time
    user_dict=json.loads(a.decode('utf-8'))
    mess[j]=pd.DataFrame.from_dict({(i,j): user_dict[i][j] 
                           for i in user_dict.keys() 
                           for j in user_dict[i].keys()},
                       orient='index')
   
#EXCEL OUTPUT   
mess.to_excel(r'C:\Users\Angela\Videos\II ANNO POLI\SMLAB\LAB_B\480secOnly1FC_Faulties.xlsx')



###3RD PART
kafka_consumer.close()
